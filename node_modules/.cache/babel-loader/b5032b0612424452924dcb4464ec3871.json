{"ast":null,"code":"var _jsxFileName = \"/Users/danielxu1221/Downloads/ramp-fe-challenge/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const {\n    data: employees,\n    ...employeeUtils\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    ...paginatedTransactionsUtils\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    ...transactionsByEmployeeUtils\n  } = useTransactionsByEmployee(); // storing the declined transactions if removed by accident\n\n  const {\n    data: declinedTransactions\n  } = useTransactionsByEmployee(); // storing the accepted transactions into a separate array\n\n  const [isLoading, setIsLoading] = useState(false);\n  const transactions = useMemo(() => {\n    var _ref, _paginatedTransaction;\n\n    return (_ref = (_paginatedTransaction = paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) !== null && _paginatedTransaction !== void 0 ? _paginatedTransaction : transactionsByEmployee) !== null && _ref !== void 0 ? _ref : null;\n  }, [paginatedTransactions, transactionsByEmployee]);\n  const approvedTransactions = useMemo(() => {\n    // checks if there is data for paginatedtransactions then transactionsbyemployee else null\n    const data = (paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) || transactionsByEmployee || []; // returns only approved transactions\n\n    return data.filter(transactions => transactions.approved === true);\n  }, [paginatedTransactions, transactionsByEmployee]); // declined transactions\n  // accepted transactions\n\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true);\n    transactionsByEmployeeUtils.invalidateData();\n    await employeeUtils.fetchAll();\n    await paginatedTransactionsUtils.fetchAll();\n    setIsLoading(false);\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  const loadTransactionsByEmployee = useCallback(async employeeId => {\n    paginatedTransactionsUtils.invalidateData();\n    await transactionsByEmployeeUtils.fetchById(employeeId);\n  }, [paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions();\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        isLoading: isLoading,\n        defaultValue: EMPTY_EMPLOYEE,\n        items: employees === null ? [] : [EMPTY_EMPLOYEE, ...employees],\n        label: \"Filter by employee\",\n        loadingLabel: \"Loading employees\",\n        parseItem: item => ({\n          value: item.id,\n          label: `${item.firstName} ${item.lastName}`\n        }),\n        onChange: async newValue => {\n          console.log('Selected Value:', newValue);\n\n          if ((newValue === null || newValue === void 0 ? void 0 : newValue.id) === EMPTY_EMPLOYEE.id) {\n            // reset the list of transactions\n            await loadAllTransactions();\n            return;\n          } else if (!newValue) {\n            return;\n          }\n\n          await loadTransactionsByEmployee(newValue === null || newValue === void 0 ? void 0 : newValue.id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampGrid\",\n        children: [/*#__PURE__*/_jsxDEV(Transactions, {\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), transactions !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          disabled: paginatedTransactionsUtils.loading,\n          onClick: async () => {\n            if (paginatedTransactions === null) return;\n            await loadAllTransactions();\n          },\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          children: \"Approve Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          children: \"Decline Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"epJt/eIFst4L1AfJ1Ov7zGUb9CM=\", false, function () {\n  return [useEmployees, usePaginatedTransactions, useTransactionsByEmployee, useTransactionsByEmployee];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useMemo","useState","InputSelect","Instructions","Transactions","useEmployees","usePaginatedTransactions","useTransactionsByEmployee","EMPTY_EMPLOYEE","App","data","employees","employeeUtils","paginatedTransactions","paginatedTransactionsUtils","transactionsByEmployee","transactionsByEmployeeUtils","declinedTransactions","isLoading","setIsLoading","transactions","approvedTransactions","filter","approved","loadAllTransactions","invalidateData","fetchAll","loadTransactionsByEmployee","employeeId","fetchById","loading","item","value","id","label","firstName","lastName","newValue","console","log"],"sources":["/Users/danielxu1221/Downloads/ramp-fe-challenge/src/App.tsx"],"sourcesContent":["import { Fragment, useCallback, useEffect, useMemo, useState } from \"react\"\nimport { InputSelect } from \"./components/InputSelect\"\nimport { Instructions } from \"./components/Instructions\"\nimport { Transactions } from \"./components/Transactions\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\"\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\"\nimport { Employee, Transaction } from './utils/types';\n\nexport function App() {\n  const { data: employees, ...employeeUtils } = useEmployees()\n  const { data: paginatedTransactions, ...paginatedTransactionsUtils } = usePaginatedTransactions()\n  const { data: transactionsByEmployee, ...transactionsByEmployeeUtils } = useTransactionsByEmployee()\n  // storing the declined transactions if removed by accident\n  const { data: declinedTransactions } = useTransactionsByEmployee()\n  // storing the accepted transactions into a separate array\n  \n  const [isLoading, setIsLoading] = useState(false)\n\n  const transactions = useMemo(\n    () => paginatedTransactions?.data ?? transactionsByEmployee ?? null,\n    [paginatedTransactions, transactionsByEmployee]\n  )\n  \n  const approvedTransactions = useMemo<Transaction[] | null>(\n    () => {\n      // checks if there is data for paginatedtransactions then transactionsbyemployee else null\n      const data = paginatedTransactions?.data || transactionsByEmployee || [];\n      // returns only approved transactions\n      return data.filter(transactions => transactions.approved === true)\n\n    }, [paginatedTransactions, transactionsByEmployee])\n  \n  // declined transactions\n\n  // accepted transactions\n\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true)\n    transactionsByEmployeeUtils.invalidateData()\n\n    await employeeUtils.fetchAll()\n    await paginatedTransactionsUtils.fetchAll()\n\n    setIsLoading(false)\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils])\n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      paginatedTransactionsUtils.invalidateData()\n      await transactionsByEmployeeUtils.fetchById(employeeId)\n    },\n    [paginatedTransactionsUtils, transactionsByEmployeeUtils]\n  )\n\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions()\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions])\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          isLoading={isLoading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={async (newValue) => {\n            console.log('Selected Value:', newValue);\n            if (newValue?.id === EMPTY_EMPLOYEE.id) {\n              // reset the list of transactions\n              await loadAllTransactions()\n              return\n            } else if (!newValue) {\n              return\n            }\n            await loadTransactionsByEmployee(newValue?.id)\n          }}\n        />\n\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          <Transactions transactions={transactions} />\n\n          {transactions !== null && (\n            <button\n              className=\"RampButton\"\n              disabled={paginatedTransactionsUtils.loading}\n              onClick={async () => {\n                if (paginatedTransactions === null) return\n                await loadAllTransactions()\n              }}\n            >\n              View More\n            </button>\n          )}\n          <button className=\"RampButton\">Approve Transaction</button>\n          <button className=\"RampButton\">Decline Transaction</button>\n        </div>\n      </main>\n    </Fragment>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}