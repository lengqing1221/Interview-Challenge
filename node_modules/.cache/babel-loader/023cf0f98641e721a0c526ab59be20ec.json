{"ast":null,"code":"var _jsxFileName = \"/Users/danielxu1221/Downloads/ramp-fe-challenge/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const {\n    data: employees,\n    ...employeeUtils\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    ...paginatedTransactionsUtils\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    ...transactionsByEmployeeUtils\n  } = useTransactionsByEmployee(); // storing the declined transactions if removed by accident\n\n  const [declinedTransactions, setDeclinedTransactions] = useState([]); // storing the accepted transactions into a separate array\n\n  const [localTransactions, setLocalTransactions] = useState([]);\n  const [approvedTransactions, setApprovedTransactions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const transactions = useMemo(() => {\n    var _ref, _paginatedTransaction;\n\n    return (_ref = (_paginatedTransaction = paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) !== null && _paginatedTransaction !== void 0 ? _paginatedTransaction : transactionsByEmployee) !== null && _ref !== void 0 ? _ref : null;\n  }, [paginatedTransactions, transactionsByEmployee]);\n  useEffect(() => {\n    if (transactions) {\n      setLocalTransactions(transactions);\n    }\n  }, [transactions]);\n\n  const handleApproveTransaction = transactionId => {\n    setLocalTransactions(prev => {\n      // Find the transaction in local\n      const found = prev.find(t => t.id === transactionId);\n\n      if (found) {\n        // Add a copy to approvedTransactions\n        setApprovedTransactions(oldApproved => [...oldApproved, { ...found,\n          approved: true\n        }]);\n      } // Remove it from local\n\n\n      return prev.filter(t => t.id !== transactionId);\n    });\n  }; // declined transactions\n\n\n  const handleDeclineTransaction = transactionId => {\n    setLocalTransactions(prev => {\n      const found = prev.find(t => t.id === transactionId);\n\n      if (found) {\n        setDeclinedTransactions(oldDeclined => [...oldDeclined, found]);\n      } // Return the new local list without the declined item\n\n\n      return prev.filter(t => t.id !== transactionId);\n    });\n  };\n\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true);\n    transactionsByEmployeeUtils.invalidateData();\n    await employeeUtils.fetchAll();\n    await paginatedTransactionsUtils.fetchAll();\n    setIsLoading(false);\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  const loadTransactionsByEmployee = useCallback(async employeeId => {\n    paginatedTransactionsUtils.invalidateData();\n    await transactionsByEmployeeUtils.fetchById(employeeId);\n  }, [paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions();\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        isLoading: isLoading,\n        defaultValue: EMPTY_EMPLOYEE,\n        items: employees === null ? [] : [EMPTY_EMPLOYEE, ...employees],\n        label: \"Filter by employee\",\n        loadingLabel: \"Loading employees\",\n        parseItem: item => ({\n          value: item.id,\n          label: `${item.firstName} ${item.lastName}`\n        }),\n        onChange: async newValue => {\n          console.log('Selected Value:', newValue);\n\n          if ((newValue === null || newValue === void 0 ? void 0 : newValue.id) === EMPTY_EMPLOYEE.id) {\n            // reset the list of transactions\n            await loadAllTransactions();\n            return;\n          } else if (!newValue) {\n            return;\n          }\n\n          await loadTransactionsByEmployee(newValue === null || newValue === void 0 ? void 0 : newValue.id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampGrid\",\n        children: [/*#__PURE__*/_jsxDEV(Transactions, {\n          transactions: localTransactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), localTransactions !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          disabled: paginatedTransactionsUtils.loading || (paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.nextPage) == null || (transactionsByEmployee === null || transactionsByEmployee === void 0 ? void 0 : transactionsByEmployee.length) === 0,\n          onClick: async () => {\n            await loadAllTransactions();\n          },\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          onClick: () => {\n            if (localTransactions.length > 0) {\n              handleApproveTransaction(localTransactions[0].id);\n            }\n          },\n          children: \"Approve First\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          onClick: () => {\n            if (localTransactions.length > 0) {\n              handleDeclineTransaction(localTransactions[0].id);\n            }\n          },\n          children: \"Decline First\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"approved_transactions w-full Ramp-Grid\",\n        children: [/*#__PURE__*/_jsxDEV(Transactions, {\n          transactions: approvedTransactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this), approvedTransactions !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"w-full\",\n          disabled: paginatedTransactionsUtils.loading || (paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.nextPage) == null || (transactionsByEmployee === null || transactionsByEmployee === void 0 ? void 0 : transactionsByEmployee.length) === 0,\n          onClick: async () => {\n            await loadAllTransactions();\n          },\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1B+Y36NRc32BxtdOiuJBgP0dVT0=\", false, function () {\n  return [useEmployees, usePaginatedTransactions, useTransactionsByEmployee];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useMemo","useState","InputSelect","Instructions","Transactions","useEmployees","usePaginatedTransactions","useTransactionsByEmployee","EMPTY_EMPLOYEE","App","data","employees","employeeUtils","paginatedTransactions","paginatedTransactionsUtils","transactionsByEmployee","transactionsByEmployeeUtils","declinedTransactions","setDeclinedTransactions","localTransactions","setLocalTransactions","approvedTransactions","setApprovedTransactions","isLoading","setIsLoading","transactions","handleApproveTransaction","transactionId","prev","found","find","t","id","oldApproved","approved","filter","handleDeclineTransaction","oldDeclined","loadAllTransactions","invalidateData","fetchAll","loadTransactionsByEmployee","employeeId","fetchById","loading","item","value","label","firstName","lastName","newValue","console","log","nextPage","length"],"sources":["/Users/danielxu1221/Downloads/ramp-fe-challenge/src/App.tsx"],"sourcesContent":["import { Fragment, useCallback, useEffect, useMemo, useState } from \"react\"\nimport { InputSelect } from \"./components/InputSelect\"\nimport { Instructions } from \"./components/Instructions\"\nimport { Transactions } from \"./components/Transactions\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\"\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\"\nimport { Employee, Transaction } from './utils/types';\n\nexport function App() {\n  const { data: employees, ...employeeUtils } = useEmployees()\n  const { data: paginatedTransactions, ...paginatedTransactionsUtils } = usePaginatedTransactions()\n  const { data: transactionsByEmployee, ...transactionsByEmployeeUtils } = useTransactionsByEmployee()\n  // storing the declined transactions if removed by accident\n  const [declinedTransactions, setDeclinedTransactions] = useState<Transaction[]>([])\n\n  // storing the accepted transactions into a separate array\n\n  const [localTransactions, setLocalTransactions] = useState<Transaction[]>([])\n  const [approvedTransactions, setApprovedTransactions] = useState<Transaction[]>([])\n\n  \n  const [isLoading, setIsLoading] = useState(false)\n\n  const transactions = useMemo(\n    () => paginatedTransactions?.data ?? transactionsByEmployee ?? null,\n    [paginatedTransactions, transactionsByEmployee]\n  )\n\n  useEffect(() => {\n    if (transactions) {\n      setLocalTransactions(transactions)\n    }\n  }, [transactions])\n  \n  const handleApproveTransaction = (transactionId: string) => {\n    setLocalTransactions((prev) => {\n      // Find the transaction in local\n      const found = prev.find((t) => t.id === transactionId)\n      if (found) {\n        // Add a copy to approvedTransactions\n        setApprovedTransactions((oldApproved) => [\n          ...oldApproved,\n          { ...found, approved: true },\n        ])\n      }\n      // Remove it from local\n      return prev.filter((t) => t.id !== transactionId)\n    })\n  }\n  \n  \n  // declined transactions\n  const handleDeclineTransaction = (transactionId: string) => {\n    setLocalTransactions((prev) => {\n      const found = prev.find((t) => t.id === transactionId)\n      if (found) {\n        setDeclinedTransactions((oldDeclined) => [...oldDeclined, found])\n      }\n      // Return the new local list without the declined item\n      return prev.filter((t) => t.id !== transactionId)\n    })\n  }\n\n\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true)\n    transactionsByEmployeeUtils.invalidateData()\n\n    await employeeUtils.fetchAll()\n    await paginatedTransactionsUtils.fetchAll()\n\n    setIsLoading(false)\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils])\n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      paginatedTransactionsUtils.invalidateData()\n      await transactionsByEmployeeUtils.fetchById(employeeId)\n    },\n    [paginatedTransactionsUtils, transactionsByEmployeeUtils]\n  )\n\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions()\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions])\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          isLoading={isLoading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={async (newValue) => {\n            console.log('Selected Value:', newValue);\n            if (newValue?.id === EMPTY_EMPLOYEE.id) {\n              // reset the list of transactions\n              await loadAllTransactions()\n              return\n            } else if (!newValue) {\n              return\n            }\n            await loadTransactionsByEmployee(newValue?.id)\n          }}\n        />\n\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          <Transactions transactions={localTransactions} />\n\n          {localTransactions !== null && (\n            <button\n              className=\"RampButton\"\n              disabled={paginatedTransactionsUtils.loading || paginatedTransactions?.nextPage == null || transactionsByEmployee?.length === 0}\n              onClick={async () => {\n                await loadAllTransactions()\n              }}\n            >\n              View More\n            </button>\n          )}\n          <button className=\"RampButton\" onClick={() => {\n            if (localTransactions.length > 0) {\n              handleApproveTransaction(localTransactions[0].id)\n            }\n          }}>\n            Approve First\n          </button>\n\n          <button className=\"RampButton\" onClick={() => {\n            if (localTransactions.length > 0) {\n              handleDeclineTransaction(localTransactions[0].id)\n            }\n          }}>\n            Decline First\n          </button>\n        </div>\n        <div className=\"approved_transactions w-full Ramp-Grid\">\n        <Transactions transactions={approvedTransactions} />\n\n{approvedTransactions !== null && (\n  <button\n    className=\"w-full\"\n    disabled={paginatedTransactionsUtils.loading || paginatedTransactions?.nextPage == null || transactionsByEmployee?.length === 0}\n    onClick={async () => {\n      await loadAllTransactions()\n    }}\n  >\n    View More\n  </button>\n)}\n        </div>\n      </main>\n    </Fragment>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}